//ALL DATA/*void sendBinFrame(void) //all data{    Serial.write("BF");          //quaternion data  imu::Quaternion quat = bno.getQuat();  binaryFloat qW, qX, qY, qZ;          qW.floatingPoint = quat.w();     Serial.write(qW.binary,4);      qX.floatingPoint = quat.x();     Serial.write(qX.binary,4);    qY.floatingPoint = quat.y();     Serial.write(qY.binary,4);    qZ.floatingPoint = quat.z();    Serial.write(qZ.binary,4);      //orientation data  sensors_event_t orientationData;  bno.getEvent(&orientationData, Adafruit_BNO055::VECTOR_EULER);  binaryFloat yaw, pitch, roll;      yaw.floatingPoint = orientationData.orientation.x;    Serial.write(yaw.binary,4);  pitch.floatingPoint = orientationData.orientation.y;    Serial.write(pitch.binary,4);  roll.floatingPoint = orientationData.orientation.z;   Serial.write(roll.binary,4);    //position data  sensors_event_t linearAccelData;  bno.getEvent(&linearAccelData, Adafruit_BNO055::VECTOR_LINEARACCEL);    binaryFloat laccel_x, laccel_y, laccel_z;     laccel_x.floatingPoint = linearAccelData.acceleration.x;    Serial.write(laccel_x.binary,4);  laccel_y.floatingPoint = linearAccelData.acceleration.y;    Serial.write(laccel_y.binary,4);  laccel_z.floatingPoint = linearAccelData.acceleration.z;   Serial.write(laccel_z.binary,4);     xPos = xPos + ACCEL_POS_TRANSITION * linearAccelData.acceleration.x;  yPos = yPos + ACCEL_POS_TRANSITION * linearAccelData.acceleration.y;  zPos = zPos + ACCEL_POS_TRANSITION * linearAccelData.acceleration.z;    binaryFloat xP, yP, zP;    xP.floatingPoint = xPos;  Serial.write(xP.binary,4);  yP.floatingPoint = yPos;  Serial.write(yP.binary,4);  zP.floatingPoint = zPos;  Serial.write(zP.binary,4);    //raw sensor data  imu::Vector<3> v_accel = bno.getVector(Adafruit_BNO055::VECTOR_ACCELEROMETER);  imu::Vector<3> v_gyro = bno.getVector(Adafruit_BNO055::VECTOR_GYROSCOPE);  imu::Vector<3> v_mag = bno.getVector(Adafruit_BNO055::VECTOR_MAGNETOMETER);  binaryFloat accel_x, accel_y, accel_z;    binaryFloat gyro_x, gyro_y, gyro_z;    binaryFloat mag_x, mag_y, mag_z;      //acceleration data  accel_x.floatingPoint = v_accel.x();    Serial.write(accel_x.binary,4);  accel_y.floatingPoint = v_accel.y();   Serial.write(accel_y.binary,4);  accel_z.floatingPoint = v_accel.z();    Serial.write(accel_z.binary,4);    //gyroscope data  gyro_x.floatingPoint = v_gyro.x();    Serial.write(gyro_x.binary,4);  gyro_y.floatingPoint = v_gyro.y();    Serial.write(gyro_y.binary,4);  gyro_z.floatingPoint = v_gyro.z();    Serial.write(gyro_z.binary,4);    //magnetometer data  mag_x.floatingPoint = v_mag.x();    Serial.write(mag_x.binary,4);  mag_y.floatingPoint = v_mag.y();    Serial.write(mag_y.binary,4);  mag_z.floatingPoint = v_mag.z();    Serial.write(mag_z.binary,4);    //calibration status data  uint8_t sys, gyro, accel, mag;  sys = gyro = accel = mag = 0;  bno.getCalibration(&sys, &gyro, &accel, &mag);      Serial.write(sys);  Serial.write(accel);  Serial.write(gyro);    Serial.write(mag);  }*/